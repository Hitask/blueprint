// Copyright 2015 Palantir Technologies, Inc. All rights reserved.
// Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy
// of the license at https://github.com/palantir/blueprint/blob/master/LICENSE
// and https://github.com/palantir/blueprint/blob/master/PATENTS

@import "../../common/mixins";
@import "../../common/variables";

$white-transparent: rgba($white, 0);

$button-color: $white;
$button-color-hover: $white;
$button-color-active: $white;
$button-color-disabled: $pt-text-color-disabled;
$button-border-width: 0;
$button-padding: 0 ($pt-grid-size * 2);
$button-padding-large: 0 ($pt-grid-size * 1.5);
$button-icon-spacing: ($pt-button-height - $pt-icon-size-standard) / 2;
$button-icon-spacing-large: ($pt-button-height-large - $pt-icon-size-large) / 2;
$dark-button-color-disabled: $pt-dark-text-color-disabled;

$button-border-color: rgba($black, 0.1) rgba($black, 0.1) rgba($black, 0.17) rgba($black, 0.1);
$button-border-color-hover: rgba($black, 0.2) rgba($black, 0.2) rgba($black, 0.27) rgba($black, 0.2);
$button-border-color-active: rgba($black, 0.35) rgba($black, 0.25) rgba($black, 0.25) rgba($black, 0.25);
$button-box-shadow: inset 0 1.5px .5px .8px rgba($black,.2);
$dark-button-border-color: rgba($black, 0.6);
$dark-button-border-color-hover: rgba($black, 0.8);
$dark-button-box-shadow: 0 1px 1px rgba($black, 0.2);

$button-intent-border-color: rgba($black, 0.1) rgba($black, 0.1) rgba($black, 0.3) rgba($black, 0.1);
$button-intent-border-color-active: rgba($black, 0.6) rgba($black, 0.2) rgba($black, 0.2) rgba($black, 0.2);
$button-intent-box-shadow: 0 1px 1px rgba($black, 0.2);
$dark-button-intent-border-color: rgba($black, 0.6);
$dark-button-intent-box-shadow: 0 1px 1px rgba($black, 0.2);

$button-background-color: $turquoise4;
$button-background-color-hover: $turquoise5;
$button-background-color-active: $turquoise5;
$button-background-color-disabled: rgba($light-gray1, 0.5);
$button-background-color-active-disabled: rgba($light-gray2, 0.4);
$dark-button-background-color: none;
$dark-button-background-color-hover: rgba($white, 0.1);
$dark-button-background-color-active: rgba($black, 0.1);
$dark-button-background-color-disabled: rgba($light-gray1, 0.1);
$dark-button-background-color-active-disabled: rgba($light-gray1, 0.2);

$minimal-button-color: $pt-text-color;
$minimal-button-color-hover: $pt-text-color;
$minimal-button-color-active: $pt-text-color;
$minimal-button-color-disabled: $pt-text-color-disabled;
$minimal-button-divider-width: 1px;
$minimal-button-background-color: none;
$minimal-button-background-color-hover: rgba($gray4, 0.3);
$minimal-button-background-color-active: rgba($gray4, 0.3);
$dark-minimal-button-background-color: none;
$dark-minimal-button-background-color-hover: rgba($gray3, 0.15);
$dark-minimal-button-background-color-active: rgba($gray3, 0.3);

// "intent": (default, hover, active colors)
$button-intents: (
  "primary": ($pt-intent-primary, $blue2, $blue1),
  "success": ($pt-intent-success, $green2, $green1),
  "warning": ($pt-intent-warning, $orange2, $orange1),
  "danger": ($pt-intent-danger, $red2, $red1)
);

// matches default buttons only -- used to remove border-right in button groups and control groups
$non-default-state-selectors: ":last-child, :hover, :active, .pt-active, [class*=\"pt-intent-\"]";

@mixin pt-button-base() {
  display: inline-block;
  border: $button-border-width solid;
  border-radius: $pt-border-radius;
  cursor: pointer;
  padding: $button-padding;
  vertical-align: middle;
  font-size: $pt-font-size;
	outline: none;
	user-select: none;
	transition: background-color $pt-transition-ease $pt-transition-duration, color $pt-transition-ease $pt-transition-duration;
}

@mixin pt-button-height($height) {
  min-width: $height;
  min-height: $height;
  // for text centering
  line-height: $height - $button-border-width * 2;
}

@mixin pt-button() {
  color: $button-color;
	background-color: $button-background-color;

  &:hover {
    @include pt-button-hover();
  }

  &:active {
    @include pt-button-active();
  }

  &:disabled {
    background-color: $button-background-color-disabled;
    color: $button-color-disabled;
		box-shadow: none;
  }
}


@mixin pt-button-hover() {
	color: $button-color-hover;
  background-color: $button-background-color-hover;
}

@mixin pt-button-active() {
	color: $button-color-active;
  box-shadow: $button-box-shadow;
  background-color: $button-background-color-active;
}

@mixin pt-button-intent($default-color, $hover-color, $active-color) {
  color: $white;
	background-color: $default-color;

  &:hover {
		background-color: $hover-color;
  }

  &:active {
    box-shadow: inset $button-intent-box-shadow;
    background-color: $active-color;
  }

  &:disabled {
    background-color: rgba($default-color, 0.5);
  }
}

@mixin pt-dark-button() {
  @include linear-gradient-with-fallback(rgba($white, 0.1), rgba($white, 0.06), $dark-button-background-color);

  border-color: $dark-button-border-color;
  box-shadow: $dark-button-box-shadow;
  background-clip: padding-box;
  color: $pt-dark-text-color;

  &:hover,
  &:active {
    color: $pt-dark-text-color;
  }

  &:hover {
    @include pt-dark-button-hover();
  }

  &:active {
    @include pt-dark-button-active();
  }

  &:disabled {
    border-color: $dark-button-background-color-disabled;
    box-shadow: none;
    background-color: $dark-button-background-color-disabled;
    background-image: none;
    color: $dark-button-color-disabled;
  }
}

@mixin pt-dark-button-hover() {
  @include linear-gradient-with-fallback(rgba($black, 0.1), rgba($black, 0.2), $dark-button-background-color-hover);

  border-color: $dark-button-border-color-hover;
  box-shadow: $dark-button-box-shadow;
  background-clip: padding-box;
}

@mixin pt-dark-button-active() {
  box-shadow: inset $dark-button-box-shadow;
  background-color: $dark-button-background-color-active;
  background-image: none;
}

@mixin pt-dark-button-intent() {
  border-color: $dark-button-intent-border-color;
  box-shadow: $dark-button-intent-box-shadow;
  background-clip: padding-box;

  &:hover {
    box-shadow: $dark-button-intent-box-shadow;
  }

  &:active {
    box-shadow: inset $dark-button-intent-box-shadow;
  }

  &:disabled {
    border: none;
    box-shadow: none;
    background-image: none;
    color: rgba($white, 0.3);
  }
}

@mixin pt-button-minimal() {
  background: $minimal-button-background-color;
	color: $minimal-button-color;

  &:hover {
    background: $minimal-button-background-color-hover;
    text-decoration: none;
    color: $minimal-button-color-hover;
  }

  &.pt-active,
  &:active {
    background: $minimal-button-background-color-active;
    color: $minimal-button-color-active;
  }

  &.pt-disabled,
  &:disabled,
  &:disabled:hover {
    background: inherit;
    cursor: not-allowed;
    color: $minimal-button-color-disabled;
  }

  .pt-dark & {
    border-color: transparent;
    box-shadow: none;
    background: $dark-minimal-button-background-color;
    color: inherit;

    &:hover,
    &:active,
    &.pt-active {
      border-color: transparent;
      box-shadow: none;
      background: none;
    }

    &:hover {
      background: $dark-minimal-button-background-color-hover;
    }

    &:active,
    &.pt-active {
      background: $dark-minimal-button-background-color-active;
      color: $pt-dark-text-color;
    }

    &.pt-disabled,
    &:disabled,
    &:disabled:hover {
      border-color: transparent;
      background: inherit;
      cursor: not-allowed;
      color: $pt-dark-text-color-disabled;
    }
  }

  @each $intent, $colors in $button-intents {
    &.pt-intent-#{$intent} {
      @include pt-button-minimal-intent(
        map-get($pt-intent-colors, $intent),
        map-get($pt-intent-text-colors, $intent),
        map-get($pt-dark-intent-text-colors, $intent)
      );
    }
  }
}

@mixin pt-button-minimal-intent($intent-color, $text-color, $dark-text-color) {
  color: $text-color;

  &:hover,
  &:active,
  &.pt-active {
    box-shadow: none;
    background: none;
    color: $text-color;
  }

  &:hover {
    background: rgba($intent-color, 0.15);
  }

  &:active,
  &.pt-active {
    background: rgba($intent-color, 0.3);
    color: $text-color;
  }

  &:disabled,
  &.pt-disabled {
    background: none;
    color: rgba($text-color, 0.5);
  }

  .pt-dark & {
    color: $dark-text-color;

    &:hover {
      background: rgba($intent-color, 0.2);
      color: $dark-text-color;
    }

    &:active,
    &.pt-active {
      background: rgba($intent-color, 0.3);
      color: $dark-text-color;
    }

    &:disabled,
    &.pt-disabled {
      color: rgba($dark-text-color, 0.5);
    }
  }
}

@mixin pt-button-minimal-divider() {
  $divider-height: $pt-grid-size * 2;

  margin: ($pt-button-height - $divider-height) / 2;
  background: $pt-divider-black;
  width: $minimal-button-divider-width;
  height: $divider-height;

  .pt-dark & {
    background: $pt-dark-divider-white;
  }
}

@mixin pt-button-large() {
  @include pt-button-height($pt-button-height-large);

  padding: $button-padding-large;
  font-size: $pt-font-size-large;
}
